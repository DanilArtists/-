#include <iostream>
#include <vector>

using namespace std;

class Form
{
public:
    virtual double plosad() const = 0; 
    virtual void display() const = 0; 
};

class Cryg : public Form
{
private:
    double radius; 
public:
    Cryg(double r) : radius(r) {}

    double plosad() const 
    {
        return M_PI * radius * radius; 
    }

    void display() const  
    {
        cout << "Круг с радиусом " << radius << " имеет площадь " << plosad() << endl;
    }
};

class Pramo : public Form
{
private:
    double width; 
    double height; 
public:
    Pramo(double w, double h) : width(w), height(h) {}

    double plosad() const
    {
        return width * height; 
    }

    void display() const 
    {
        cout << "Прямоугольник с шириной " << width << " и высотой " << height << " имеет площадь " << plosad()<< endl;
    }
};

int main() 
{
    setlocale(LC_ALL, "Ru");
    vector<Form*> forms; 
    forms.push_back(new Circle(5)); 
    forms.push_back(new Rectangle(5, 10)); 

    for (const auto& form : forms) 
    {
        form->display();
    }

    for (auto form : forms) 
    {
        delete forms;
    }

}
