#include <iostream>

using namespace std;


int verBaseDamage(int obicniuDamage) 
{
    return obicniuDamage;
}

int verRandomDamage(int minDamage, int maxDamage) 
{
    return rand() % (maxDamage - minDamage + 1) + minDamage;
}

int verCriticalDamage(int obicniuDamage, float criticalChance) 
{
    if ((static_cast<float>(rand()) / RAND_MAX) < criticalChance) 
    {
        return obicniuDamage * 2; 
    }
    return obicniuDamage;
}

int main() 
{
    setlocale(LC_ALL, "Ru");
    srand(static_cast<unsigned int>(time(0))); 

    int damageType;
    int obicniuDamage = 35; 
    int minDamage = 10;  
    int maxDamage = 70; 
    float criticalChance = 0.75f; 

    cout << "Выберите тип урона:\n";
    cout << "1 - Базовый урон\n";
    cout << "2 - Урон от мин до макс\n";
    cout << "3 - Урон с шансом крита\n";
    cin >> damageType;

    int damage = 1;
    
    switch (damageType) 
    {
        case BASE_DAMAGE:
            damage = verBaseDamage(obicniuDamage);
            break;
        case RANDOM_DAMAGE:
            damage = verRandomDamage(minDamage, maxDamage);
            break;
        case CRITICAL_DAMAGE:
            damage = verCriticalDamage(obicniuDamage, criticalChance);
            break;
        default:
            cout << "Неверный выбор типа урона.\n";
            return 1; 
    }

    cout << "Нанесенный урон: " << damage << endl;
}
